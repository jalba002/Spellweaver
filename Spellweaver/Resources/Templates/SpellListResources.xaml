<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
                    xmlns:viewModels="clr-namespace:Spellweaver.ViewModel">
    <Style x:Key="SpellListEntry" TargetType="DockPanel">
        <Setter Property="TextBlock.FontSize" Value="12"/>
        <Setter Property="TextBlock.FontFamily" Value="Montserrat"/>
    </Style>

    <Style x:Key="SpellListHiddenButton" TargetType="{x:Type Button}">
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="IsEnabled" Value="False"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType=ListViewItem}}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
                <Setter Property="IsEnabled" Value="True"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SpellListViewItemStyle" TargetType="ListViewItem">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="true" />
        <Setter Property="Margin" Value="0,0,0,4" />
        <Setter Property="Padding" Value="{StaticResource DefaultControlPadding}" />
        <Setter Property="MinHeight" Value="44" />
        <!--<Setter Property="Template">
        <Setter.Value>
            <ControlTemplate TargetType="{x:Type ListViewItem}">
                <Border Name="Bd" CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                    <GridViewRowPresenter Content="{TemplateBinding Content}" Columns="{TemplateBinding ColumnCollection}" />
                </Border>
            </ControlTemplate>
        </Setter.Value>
    </Setter>-->
        <Style.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter Property="Background" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource CaptionBackgroundBrush}"/>
                <Setter Property="Margin" Value="5,0,0,4"/>
            </Trigger>
            <Trigger Property="ListBoxItem.IsSelected" Value="True">
                <!--<Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />-->
                <!--<Setter Property="Foreground" Value="{DynamicResource TextIconBrush}" />-->
                <Setter Property="BorderBrush" Value="{DynamicResource BluePaletteColor_02}"/>
                <Setter Property="Margin" Value="5,0,0,4"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ListBoxItem.IsSelected" Value="true" />
                    <Condition Property="Selector.IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource DarkDefaultBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
            </MultiTrigger>
            <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border Name="Bd" CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Spell list styles-->
    <Style x:Key="SpellListStyle" TargetType="{x:Type ListView}" BasedOn="{StaticResource ListViewBaseStyle}">
        <Setter Property="Padding" Value="0,2,0,0"/>
        <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style x:Key="SpellList_SpellCard_View_Options_Button" 
           TargetType="{x:Type Button}" 
           BasedOn="{StaticResource SpellListHiddenButton}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource BluePaletteColor_01}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource BluePaletteColor_06}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SpellList_SpellCard_Options_Icons" TargetType="{x:Type fa:IconImage}">
        <Setter Property="Height" Value="18"/>
        <Setter Property="Width" Value="18"/>
    </Style>

    <DataTemplate x:Key="SpellListEntryTemplate">
        <Grid Tag="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType=ListView}}">
            <Grid.ContextMenu>
                <ContextMenu>
                    <MenuItem Command="{Binding Path=PlacementTarget.Tag.DuplicateSpellCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                        <MenuItem.Header>
                            <TextBlock>
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}Duplicate &quot;{0}&quot;">
                                        <Binding Path="Name"></Binding>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </MenuItem.Header>
                    </MenuItem>
                    <!--<MenuItem Command="{Binding Path=PlacementTarget.Tag.RemoveCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                          CommandParameter="{Binding Path=PlacementTarget.SelectedItems, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                    <MenuItem.Header>
                        <TextBlock>
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}Remove &quot;{0}&quot;">
                                    <Binding Path="Name"></Binding>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </MenuItem.Header>
                </MenuItem>-->
                    <Separator/>
                    <MenuItem x:Name="ExportationModeMenu" ItemsSource="{Binding Path=PlacementTarget.Tag.ExportMenuItems, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                        <MenuItem.Header>
                            <TextBlock>
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}Export &quot;{0}&quot; as...">
                                        <Binding Path="Name"></Binding>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </MenuItem.Header>
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MenuItemBaseStyle}">
                                <Setter Property="Command" Value="{Binding Command}" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                        <MenuItem.ItemTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type viewModels:CastingTimeItemViewModel}" ItemsSource="{Binding Path=MenuItems}">
                                <TextBlock Text="{Binding Header}"/>
                            </HierarchicalDataTemplate>
                        </MenuItem.ItemTemplate>
                    </MenuItem>
                </ContextMenu>
            </Grid.ContextMenu>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <DockPanel LastChildFill="True">
                <DockPanel DockPanel.Dock="Top" LastChildFill="False">
                    <TextBlock Text="{Binding Name}" 
                           FontWeight="Bold"
                           DockPanel.Dock="Left"
                           FontSize="14"/>
                    <TextBlock Text="{Binding ComponentsString}"
                           Margin="5,0,0,0"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Center"
                           FontSize="10"/>
                </DockPanel>
                <TextBlock DockPanel.Dock="Top">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0} {1}">
                            <Binding Path="School" />
                            <Binding Path="LevelFormatted" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
                <TextBlock Text="{Binding Classes}" DockPanel.Dock="Top"/>
                <TextBlock Text="{Binding Source}" Foreground="Blue" DockPanel.Dock="Top"/>
            </DockPanel>
            <UniformGrid Grid.Column="1" FlowDirection="LeftToRight" Rows="2" Columns="2">
                <Button Style="{StaticResource SpellList_SpellCard_View_Options_Button}"
                        Command="{Binding Path=DataContext.LoadSpellToEditView, RelativeSource={RelativeSource AncestorType=ListView}}"
                        CommandParameter="{Binding}">
                    <fa:IconImage Icon="Pen" Style="{StaticResource SpellList_SpellCard_Options_Icons}"/>
                </Button>
                <Button Style="{StaticResource SpellList_SpellCard_View_Options_Button}"
                        Command="{Binding Path=DataContext.LoadSpellToCardView, RelativeSource={RelativeSource AncestorType=ListView}}"
                        CommandParameter="{Binding}">
                    <fa:IconImage Icon="Eye" Style="{StaticResource SpellList_SpellCard_Options_Icons}"/>
                </Button>
                <Button Style="{StaticResource SpellList_SpellCard_View_Options_Button}"
                        Command="{Binding Path=DataContext.DuplicateSpellCommand, RelativeSource={RelativeSource AncestorType=ListView}}"
                        CommandParameter="{Binding}">
                    <fa:IconImage Icon="Copy" Style="{StaticResource SpellList_SpellCard_Options_Icons}"/>
                </Button>
                <Button Style="{StaticResource SpellList_SpellCard_View_Options_Button}"
                        Command="{Binding Path=DataContext.RemoveSingleSpellCommand, RelativeSource={RelativeSource AncestorType=ListView}}"
                        CommandParameter="{Binding}">
                    <fa:IconImage Icon="X" Style="{StaticResource SpellList_SpellCard_Options_Icons}" Foreground="Red"/>
                </Button>
            </UniformGrid>
        </Grid>
    </DataTemplate>
</ResourceDictionary>