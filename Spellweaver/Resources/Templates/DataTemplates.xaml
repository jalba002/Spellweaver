<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:viewModels="clr-namespace:Spellweaver.ViewModel"
                    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp">

    <Style x:Key="SpellListEntry" TargetType="DockPanel">
        <Setter Property="TextBlock.FontSize" Value="12"/>
        <Setter Property="TextBlock.FontFamily" Value="Montserrat"/>
    </Style>

    <Style x:Key="SpellListHiddenButton" TargetType="Button">
        <Setter Property="Visibility" Value="Hidden"/>
        <!--<Setter Property="Width" Value="0"/>-->
        <!--<Setter Property="Height" Value="0"/>-->
        <Setter Property="IsEnabled" Value="False"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType=ListViewItem}}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
                <!--<Setter Property="Width" Value="75"/>-->
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="IsEnabled" Value="True"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SpellListViewItemStyle" TargetType="ListViewItem">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="true" />
        <Setter Property="Margin" Value="0,0,0,4" />
        <Setter Property="Padding" Value="{StaticResource DefaultControlPadding}" />
        <Setter Property="MinHeight" Value="44" />
        <!--<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border Name="Bd" CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <GridViewRowPresenter Content="{TemplateBinding Content}" Columns="{TemplateBinding ColumnCollection}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
        <Style.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter Property="Background" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource CaptionBackgroundBrush}"/>
                <Setter Property="Margin" Value="5,0,0,4"/>
            </Trigger>
            <Trigger Property="ListBoxItem.IsSelected" Value="True">
                <!--<Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />-->
                <!--<Setter Property="Foreground" Value="{DynamicResource TextIconBrush}" />-->
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BluePaletteColor_02}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ListBoxItem.IsSelected" Value="true" />
                    <Condition Property="Selector.IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource DarkDefaultBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
            </MultiTrigger>
            <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border Name="Bd" CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <DataTemplate x:Key="SpellViewTemplate">
        <DockPanel LastChildFill="True">
            <DockPanel DockPanel.Dock="Top" LastChildFill="False">
                <TextBlock Text="{Binding Name}" 
               FontWeight="Bold"
               DockPanel.Dock="Left"
               FontSize="14"/>
                <TextBlock Text="{Binding ComponentsString}"
               Margin="5,0,0,0"
               HorizontalAlignment="Left"
               VerticalAlignment="Center"
               FontSize="10"/>
            </DockPanel>
            <TextBlock DockPanel.Dock="Top">
                <TextBlock.Text>
                    <MultiBinding StringFormat="{}{0} {1}">
                        <Binding Path="School" />
                        <Binding Path="LevelFormatted" />
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
            <TextBlock Text="{Binding Classes}" DockPanel.Dock="Top"/>
            <TextBlock Text="{Binding Source}" Foreground="Blue" DockPanel.Dock="Top"/>
        </DockPanel>
    </DataTemplate>

    <DataTemplate x:Key="SpellEditorListDataTemplate">
        <DockPanel Style="{StaticResource SpellListEntry}"
               LastChildFill="True"
               Tag="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType=ListView}}">
            <DockPanel.ContextMenu>
                <ContextMenu>
                    <MenuItem Command="{Binding Path=PlacementTarget.Tag.DuplicateSpellCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                        <MenuItem.Header>
                            <TextBlock>
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}Duplicate &quot;{0}&quot;">
                                        <Binding Path="Name"></Binding>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem Command="{Binding Path=PlacementTarget.Tag.RemoveCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                        <MenuItem.Header>
                            <TextBlock>
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}Remove &quot;{0}&quot;">
                                        <Binding Path="Name"></Binding>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </MenuItem.Header>
                    </MenuItem>
                    <Separator/>
                    <MenuItem x:Name="ExportationModeMenu" ItemsSource="{Binding Path=PlacementTarget.Tag.ExportMenuItems, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                        <MenuItem.Header>
                            <TextBlock>
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}Export &quot;{0}&quot; as...">
                                        <Binding Path="Name"></Binding>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </MenuItem.Header>
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MenuItemBaseStyle}">
                                <Setter Property="Command" Value="{Binding Command}" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                        <MenuItem.ItemTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type viewModels:CastingTimeItemViewModel}" ItemsSource="{Binding Path=MenuItems}">
                                <TextBlock Text="{Binding Header}"/>
                            </HierarchicalDataTemplate>
                        </MenuItem.ItemTemplate>
                    </MenuItem>
                </ContextMenu>
            </DockPanel.ContextMenu>
            <DockPanel LastChildFill="True">
                <DockPanel DockPanel.Dock="Top" LastChildFill="False">
                    <TextBlock Text="{Binding Name}" 
                               FontWeight="Bold"
                               DockPanel.Dock="Left"
                               FontSize="14"/>
                    <TextBlock Text="{Binding ComponentsString}"
                               Margin="5,0,0,0"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               FontSize="10"/>
                </DockPanel>
                <TextBlock DockPanel.Dock="Top">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0} {1}">
                            <Binding Path="School" />
                            <Binding Path="LevelFormatted" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
                <TextBlock Text="{Binding Classes}" DockPanel.Dock="Top"/>
                <TextBlock Text="{Binding Source}" Foreground="Blue" DockPanel.Dock="Top"/>
            </DockPanel>
        </DockPanel>
    </DataTemplate>
    
    <!--Downloader resources-->

    <!--Download Spell button-->
    <ContentControl x:Key="DownloadSpellButtonContent">
        <Canvas>
            <fa:IconImage Name="SearchIcon" Icon="Search" HorizontalAlignment="Left" Canvas.Top="-12" VerticalAlignment="Top" Height="24" Width="24" RenderTransformOrigin="0.5,0.5" Canvas.Left="3"/>
            <fa:IconImage Name="BookIcon" Icon="BookOpen" Opacity="0.3" Canvas.Left="-27" Canvas.Top="-20" Height="40" Width="54"/>
        </Canvas>
    </ContentControl>
    <!--Downloading spells button content control-->
    <ContentControl x:Key="DownloadingSpellButtonContent">
        <Canvas>
            <fa:IconImage Icon="Cog" Opacity="1" Canvas.Left="-27" Canvas.Top="-20" Height="40" Width="54" fa:Awesome.Spin="True"/>
        </Canvas>
    </ContentControl>
</ResourceDictionary>